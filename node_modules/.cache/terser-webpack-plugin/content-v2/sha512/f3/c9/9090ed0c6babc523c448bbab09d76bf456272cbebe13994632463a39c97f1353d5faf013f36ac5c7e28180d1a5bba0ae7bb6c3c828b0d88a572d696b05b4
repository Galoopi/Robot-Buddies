{"map":"{\"version\":3,\"sources\":[\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/components/Card.js\",\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/components/CardList.js\",\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/components/Scroll.js\",\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/components/Searchbox.js\",\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/containers/App.js\",\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/serviceWorker.js\",\"/home/tiaan/Documents/ZerotoMastery/robot-buddies/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"phone\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"concat\",\"alt\",\"CardList\",\"robots\",\"cardComponent\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"Searchbox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearch\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filterRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"components_Searchbox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"0MAkBeA,EAhBF,SAAAC,GAA8B,IAA5BC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,GAAIC,EAAWJ,EAAXI,MAE9B,OAEEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,sDAEbH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAG,wBAAAC,OAA0BP,EAA1B,cAA0CQ,IAAI,KACpDN,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAKN,EAAL,KACAI,EAAAC,EAAAC,cAAA,IAAA,KAAKL,GACLG,EAAAC,EAAAC,cAAA,IAAA,KAAIH,MCUCQ,EAnBE,SAAAZ,GAAc,IAAZa,EAAYb,EAAZa,OACXC,EAAgBD,EAAOE,IAAI,SAACC,EAAMC,GACtC,OACAZ,EAAAC,EAAAC,cAACW,EAAD,CACEC,IAAKF,EACLd,GAAIU,EAAOI,GAAGd,GACdF,KAAMY,EAAOI,GAAGhB,KAChBC,MAAOW,EAAOI,GAAGf,MACjBE,MAAOS,EAAOI,GAAGb,UAKrB,OACEC,EAAAC,EAAAC,cAAA,MAAA,KACGO,ICRQM,EARA,SAACC,GACd,OACEhB,EAAAC,EAAAC,cAAA,MAAA,CAAKe,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAmBC,OAAQ,UACjEJ,EAAMK,WCWEC,EAdI,SAAA3B,GAAgCA,EAA9B4B,YAA8B,IAAlBC,EAAkB7B,EAAlB6B,aAC/B,OACIxB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WAEdH,EAAAC,EAAAC,cAAA,QAAA,CACAC,UAAU,2CACVsB,KAAK,SACLC,YAAY,wBACZC,SAAWH,MCkDHI,cAnDb,SAAAA,EAAYZ,GAAO,IAAAa,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMhB,KAgBRoB,SAAW,SAACC,GACVR,EAAKS,SAAS,CACZf,YAAac,EAAME,OAAOC,SAjB5BX,EAAKY,MAAQ,CACXjC,OAAQ,GACRe,YAAa,IAJEM,mFAQC,IAAAa,EAAAV,KAClBW,MAAM,8CACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAC3B9B,OAAQuC,uCAWL,IAAAC,EAIHhB,KAAKS,MAFPjC,EAFKwC,EAELxC,OACAe,EAHKyB,EAGLzB,YAEI0B,EAAezC,EAAO0C,OAAO,SAAAC,GACjC,OAAOA,EAAMvD,KAAKwD,cAAcC,SAAS9B,EAAY6B,iBAGvD,OAASpD,EAAAC,EAAAC,cAAA,MAAA,CACHC,UAAY,MAChBH,EAAAC,EAAAC,cAAA,KAAA,CACGC,UAAY,gBADf,mBAFO,IAG8CH,EAAAC,EAAAC,cACrDoD,EADqD,CAC3C9B,aACRQ,KAAKI,WALA,IAOJpC,EAAAC,EAAAC,cACHqD,EADG,KAEHvD,EAAAC,EAAAC,cACAsD,EADA,CACShD,OACPyC,IAJC,KAPI,YAjCKQ,EAAAA,WCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,EAAAA,EAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAAQC,SAASC,eAAe,SDuH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({name, email, id, phone}) => {\\n\\n  return (\\n\\n    <div className=\\\"tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5\\\">\\n\\n      <img src={`https://robohash.org/${id}?200x200\\\" `} alt=\\\"\\\"/>\\n        <div>\\n          <h2>{name} </h2>\\n          <p >{email}</p>\\n          <p>{phone}</p>\\n        </div>\\n    </div>\\n  )\\n}\\n\\nexport default Card;\\n\",\"import React from 'react';\\nimport Card from './Card'\\n\\nconst CardList = ({robots}) => {\\n  const cardComponent = robots.map((user, i) => {\\n    return (\\n    <Card\\n      key={i}\\n      id={robots[i].id}\\n      name={robots[i].name}\\n      email={robots[i].email}\\n      phone={robots[i].phone}\\n      />\\n  )\\n  })\\n\\n  return (\\n    <div>\\n      {cardComponent}\\n      </div>\\n  )\\n}\\nexport default CardList;\\n\",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n  return (\\n    <div style={{overflowY: 'scroll',border :'1px solid black', height: '800px'}}>\\n      {props.children}\\n    </div>\\n  );\\n};\\n\\nexport default Scroll;\\n\",\"import React from 'react';\\n\\nconst Searchbox  = ({searchfield,searchChange}) => {\\n  return (\\n      <div className=\\\"tc pa2 \\\">\\n\\n       <input\\n       className=\\\"pa3 ba b--green bg-lightest-blue br-pill\\\"\\n       type=\\\"search\\\"\\n       placeholder='search Robots buddies'\\n       onChange= {searchChange} //event\\n       />\\n\\n      </div>\\n  )\\n}\\nexport default Searchbox;\\n\",\"import React, {\\n  Component\\n} from 'react';\\nimport CardList from '../components/CardList';\\nimport Scroll from '../components/Scroll';\\nimport Searchbox from '../components/Searchbox'\\n\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      robots: [],\\n      searchfield: ''\\n    }\\n  }\\n\\n  componentDidMount() {\\n    fetch('https://jsonplaceholder.typicode.com/users')\\n      .then(response => response.json())\\n      .then(users => this.setState({\\n        robots: users\\n      }))\\n\\n  }\\n\\n  onSearch = (event) => {\\n    this.setState({\\n      searchfield: event.target.value\\n    })\\n  }\\n\\n  render() {\\n    const {\\n      robots,\\n      searchfield\\n    } = this.state;\\n    const filterRobots = robots.filter(robot => {\\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\\n    })\\n\\n    return ( <\\n      div className = \\\"tc\\\" >\\n      <\\n      h1 className = \\\"header tc f1\\\" > Robot Buddies < /h1> <\\n      Searchbox searchChange = {\\n        this.onSearch\\n      }\\n      /> <\\n      Scroll >\\n      <\\n      CardList robots = {\\n        filterRobots\\n      }\\n      /> <\\n      /Scroll> <\\n      /div>\\n    );\\n  }\\n}\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './Index.css';\\n\\nimport 'tachyons';\\n\\nimport App from './containers/App'\\n\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App/>, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},16:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),l=(n(14),n(15),n(3)),i=n(4),s=n(6),u=n(5),h=n(7),m=function(e){var t=e.name,n=e.email,a=e.id,o=e.phone;return r.a.createElement(\"div\",{className:\"tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{src:\"https://robohash.org/\".concat(a,'?200x200\" '),alt:\"\"}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,t,\" \"),r.a.createElement(\"p\",null,n),r.a.createElement(\"p\",null,o)))},d=function(e){var t=e.robots,n=t.map(function(e,n){return r.a.createElement(m,{key:n,id:t[n].id,name:t[n].name,email:t[n].email,phone:t[n].phone})});return r.a.createElement(\"div\",null,n)},b=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"1px solid black\",height:\"800px\"}},e.children)},p=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"tc pa2 \"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue br-pill\",type:\"search\",placeholder:\"search Robots buddies\",onChange:t}))},f=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).onSearch=function(e){n.setState({searchfield:e.target.value})},n.state={robots:[],searchfield:\"\"},n}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({robots:t})})}},{key:\"render\",value:function(){var e=this.state,t=e.robots,n=e.searchfield,a=t.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"header tc f1\"},\" Robot Buddies \"),\" \",r.a.createElement(p,{searchChange:this.onSearch}),\" \",r.a.createElement(b,null,r.a.createElement(d,{robots:a}),\" \"),\" \")}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(16)}},[[8,1,2]]]);","extractedComments":[]}